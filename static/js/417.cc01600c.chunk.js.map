{"version":3,"file":"static/js/417.cc01600c.chunk.js","mappings":"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","sources":["utils/helpers.ts","views/landing/ForgotPassword.tsx"],"sourcesContent":["import querystring from 'querystring';\n\nexport function createQueryString(paginator: any) {\n    return querystring.stringify(paginator);\n}\n\nexport const truncate = (str: string, n: number, ellipsis: string) => {\n    const tooLong = str.length > n;\n    const singular = str.search(/\\s/) === -1;\n\n    // Edge case where someone enters a ridiculously long string.\n    str = tooLong ? str.substr(0, n - 1) : str;\n\n    if (!singular) {\n        str = ellipsis && tooLong ? str.substr(0, str.lastIndexOf(' ')) : str;\n    }\n\n    return tooLong ? str + ellipsis : str;\n};\n\nexport const parseError = (error: any, fallbackErrorMessage = '') => {\n    const errorData = error?.response?.data?.error;\n\n    if (errorData === undefined) {\n        return 'Unexpected error occurred...'\n    }\n\n    switch (errorData.code) {\n        case '0':\n            return errorData.message;\n        case 'TOKEN.020':\n            return 'Token does not exist.'\n        case 'TOKEN.030':\n            return 'Token could not be verified.'\n        case 'TOKEN.040':\n            return 'Token could not be deleted.'\n        default:\n            return fallbackErrorMessage;\n    }\n};\n\nexport const isNullOrUndefined = (value?: unknown): boolean => {\n    return value === undefined || value === null;\n};\n\nexport const isEmailValid = (email: string) => {\n    const re = /\\S+@\\S+\\.\\S+/;\n    return re.test(email);\n};\n\nexport const isEventKeyEnter = (event: any) => {\n    return event.key === 'Enter';\n};\n","import React, { ReactElement, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport ApiCalls from \"../../domain/landing/api/ApiCalls\";\nimport { parseError } from \"../../utils/helpers\";\nimport {\n  Box,\n  Button,\n  Center,\n  Container,\n  FormControl,\n  FormLabel,\n  Heading,\n  Input,\n  Stack,\n  Text,\n  useToast,\n} from \"@chakra-ui/react\";\nimport { Logo } from \"../../components/common/Logo\";\nimport { AiOutlineCheckCircle } from \"react-icons/ai\";\nimport { cookieService } from \"../../services/CookieService\";\n\nconst ForgotPassword = (): ReactElement => {\n  const toast = useToast();\n\n  if (cookieService.isAuthenticated()) {\n    window.location.replace(\"/\");\n  }\n\n  const [email, setEmail] = useState<string>(\"\");\n  const [success, setSuccess] = useState<boolean>(false);\n\n  const onForgotPasswordClick = async () => {\n    try {\n      await ApiCalls.forgotPassword({ payload: { email } });\n      setSuccess(true);\n      toast({\n        title: \"Email sent\",\n        position: \"top-right\",\n        duration: 5000,\n        isClosable: true,\n        status: \"success\",\n      });\n    } catch (err) {\n      toast({\n        title: parseError(err),\n        position: \"top-right\",\n        duration: 5000,\n        isClosable: true,\n        status: \"error\",\n      });\n    }\n  };\n\n  return (\n    <Container\n      maxW=\"lg\"\n      py={{ base: \"12\", md: \"24\" }}\n      px={{ base: \"0\", sm: \"8\" }}\n    >\n      <Stack spacing=\"8\">\n        <Stack spacing=\"6\">\n          <Logo color={\"teal.500\"} />\n          <Stack spacing={{ base: \"2\", md: \"3\" }} textAlign=\"center\">\n            <Heading size={{ base: \"xs\", md: \"sm\" }}>Account recovery</Heading>\n            <Text color=\"fg.muted\">\n              Don't have an account?{\" \"}\n              <Box as=\"span\" color={\"teal.500\"}>\n                <Link to=\"/signup\">\n                  Sign up\n                </Link>\n              </Box>\n            </Text>\n          </Stack>\n        </Stack>\n        <Box\n          py={{ base: \"0\", sm: \"8\" }}\n          px={{ base: \"4\", sm: \"10\" }}\n          bg={{ base: \"transparent\", sm: \"bg.surface\" }}\n          boxShadow={{ base: \"none\", sm: \"md\" }}\n          borderRadius={{ base: \"none\", sm: \"xl\" }}\n        >\n          <Stack spacing=\"6\">\n            <Stack spacing=\"5\">\n              <FormControl hidden={success}>\n                <FormLabel htmlFor=\"email\">Email</FormLabel>\n                <Input\n                  id=\"email\"\n                  type=\"email\"\n                  value={email}\n                  onChange={(e: any) => setEmail(e.currentTarget.value)}\n                />\n              </FormControl>\n\n              <Box hidden={!success}>\n                <Center color={\"teal.500\"}>\n                  <AiOutlineCheckCircle size={\"6rem\"} />\n                </Center>\n                <Heading my={2} size={{ base: \"xs\", md: \"sm\" }}>\n                  Email sent\n                </Heading>\n                <Text color=\"fg.muted\">\n                  Check your email and click the link to continue.\n                </Text>\n              </Box>\n            </Stack>\n            <Stack hidden={success} spacing=\"6\">\n              <Button colorScheme=\"teal\" onClick={onForgotPasswordClick}>\n                Send link to email\n              </Button>\n            </Stack>\n          </Stack>\n        </Box>\n      </Stack>\n    </Container>\n  );\n};\n\nexport default ForgotPassword;\n"],"names":["truncate","str","n","ellipsis","tooLong","length","singular","search","substr","lastIndexOf","parseError","error","_error$response","_error$response$data","fallbackErrorMessage","arguments","undefined","errorData","response","data","code","message","toast","useToast","cookieService","isAuthenticated","window","location","replace","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","success","setSuccess","onForgotPasswordClick","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","ApiCalls","forgotPassword","payload","title","position","duration","isClosable","status","t0","stop","apply","_jsx","Container","maxW","py","base","md","px","sm","children","_jsxs","Stack","spacing","Logo","color","textAlign","Heading","size","Text","Box","as","Link","to","bg","boxShadow","borderRadius","FormControl","hidden","FormLabel","htmlFor","Input","id","type","value","onChange","e","currentTarget","Center","AiOutlineCheckCircle","my","Button","colorScheme","onClick"],"sourceRoot":""}