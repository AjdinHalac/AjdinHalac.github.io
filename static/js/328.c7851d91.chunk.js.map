{"version":3,"file":"static/js/328.c7851d91.chunk.js","mappings":"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","sources":["components/common/PasswordInput.tsx","utils/helpers.ts","views/landing/ResetPassword.tsx","../node_modules/@chakra-ui/form-control/src/form-label.tsx","../node_modules/@chakra-ui/hooks/dist/chunk-EGV7XMQK.mjs","../node_modules/@chakra-ui/utils/dist/chunk-O3SWHQEE.mjs","../node_modules/@chakra-ui/hooks/dist/chunk-IYF65QR3.mjs","../node_modules/@chakra-ui/hooks/dist/chunk-TFWETJDV.mjs","../node_modules/@chakra-ui/hooks/dist/chunk-CHB4ZXZG.mjs","../node_modules/@chakra-ui/hooks/dist/chunk-NUQE4USX.mjs","../node_modules/@chakra-ui/hooks/dist/chunk-QJA5SDDN.mjs"],"sourcesContent":["import {\n  FormControl,\n  FormLabel,\n  IconButton,\n  Input,\n  InputGroup,\n  InputProps,\n  InputRightElement,\n  useDisclosure,\n  useMergeRefs,\n} from \"@chakra-ui/react\";\nimport { forwardRef, useRef } from \"react\";\nimport { HiEye, HiEyeOff } from \"react-icons/hi\";\n\ninterface IPasswordInputProps extends InputProps {\n  label: string;\n}\n\nexport const PasswordField = forwardRef<HTMLInputElement, IPasswordInputProps>(\n  (props, ref) => {\n    const { isOpen, onToggle } = useDisclosure();\n    const inputRef = useRef<HTMLInputElement>(null);\n\n    const mergeRef = useMergeRefs(inputRef, ref);\n    const onClickReveal = () => {\n      onToggle();\n      if (inputRef.current) {\n        inputRef.current.focus({ preventScroll: true });\n      }\n    };\n\n    return (\n      <FormControl>\n        <FormLabel htmlFor=\"password\">{props.label}</FormLabel>\n        <InputGroup>\n          <InputRightElement>\n            <IconButton\n              color={\"teal.500\"}\n              variant=\"text\"\n              aria-label={isOpen ? \"Hide\" : \"Show\"}\n              icon={isOpen ? <HiEyeOff /> : <HiEye />}\n              onClick={onClickReveal}\n            />\n          </InputRightElement>\n          <Input\n            id=\"password\"\n            ref={mergeRef}\n            name=\"password\"\n            type={isOpen ? \"text\" : \"password\"}\n            autoComplete=\"current-password\"\n            required\n            {...props}\n          />\n        </InputGroup>\n      </FormControl>\n    );\n  }\n);\n\nPasswordField.displayName = \"PasswordField\";\n","import querystring from 'querystring';\n\nexport function createQueryString(paginator: any) {\n    return querystring.stringify(paginator);\n}\n\nexport const truncate = (str: string, n: number, ellipsis: string) => {\n    const tooLong = str.length > n;\n    const singular = str.search(/\\s/) === -1;\n\n    // Edge case where someone enters a ridiculously long string.\n    str = tooLong ? str.substr(0, n - 1) : str;\n\n    if (!singular) {\n        str = ellipsis && tooLong ? str.substr(0, str.lastIndexOf(' ')) : str;\n    }\n\n    return tooLong ? str + ellipsis : str;\n};\n\nexport const parseError = (error: any, fallbackErrorMessage = '') => {\n    const errorData = error?.response?.data?.error;\n\n    if (errorData === undefined) {\n        return 'Unexpected error occurred...'\n    }\n\n    switch (errorData.code) {\n        case '0':\n            return errorData.message;\n        case 'TOKEN.020':\n            return 'Token does not exist.'\n        case 'TOKEN.030':\n            return 'Token could not be verified.'\n        case 'TOKEN.040':\n            return 'Token could not be deleted.'\n        default:\n            return fallbackErrorMessage;\n    }\n};\n\nexport const isNullOrUndefined = (value?: unknown): boolean => {\n    return value === undefined || value === null;\n};\n\nexport const isEmailValid = (email: string) => {\n    const re = /\\S+@\\S+\\.\\S+/;\n    return re.test(email);\n};\n\nexport const isEventKeyEnter = (event: any) => {\n    return event.key === 'Enter';\n};\n","import React, { ReactElement, useState } from \"react\";\nimport { Link, useSearchParams } from \"react-router-dom\";\n\nimport ApiCalls from \"../../domain/landing/api/ApiCalls\";\nimport { parseError } from \"../../utils/helpers\";\nimport {\n  Box,\n  Button,\n  Center,\n  Container,\n  FormControl,\n  Heading,\n  Stack,\n  Text,\n  useToast,\n} from \"@chakra-ui/react\";\nimport { Logo } from \"../../components/common/Logo\";\nimport { AiOutlineCheckCircle } from \"react-icons/ai\";\nimport { PasswordField } from \"../../components/common/PasswordInput\";\nimport { cookieService } from \"../../services/CookieService\";\n\nconst ResetPassword = (): ReactElement => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const token = searchParams.get(\"token\");\n  const toast = useToast();\n\n  if (cookieService.isAuthenticated()) {\n    window.location.replace(\"/\");\n  }\n\n  const [password, setPassword] = useState<string>(\"\");\n  const [success, setSuccess] = useState<boolean>(false);\n\n  const onResetPasswordClick = async () => {\n    try {\n      await ApiCalls.resetPassword({\n        payload: { token: token ? token : \"invalid\", password: password },\n      });\n      setSuccess(true);\n      toast({\n        title: \"Email sent\",\n        position: \"top-right\",\n        duration: 5000,\n        isClosable: true,\n        status: \"success\",\n      });\n    } catch (err) {\n      toast({\n        title: parseError(err),\n        position: \"top-right\",\n        duration: 5000,\n        isClosable: true,\n        status: \"error\",\n      });\n    }\n  };\n\n  return (\n    <Container\n      maxW=\"lg\"\n      py={{ base: \"12\", md: \"24\" }}\n      px={{ base: \"0\", sm: \"8\" }}\n    >\n      <Stack spacing=\"8\">\n        <Stack spacing=\"6\">\n          <Logo color={\"teal.500\"} />\n          <Stack spacing={{ base: \"2\", md: \"3\" }} textAlign=\"center\">\n            <Heading size={{ base: \"xs\", md: \"sm\" }}>\n              Create a new password\n            </Heading>\n            <Text color=\"fg.muted\">\n              Don't have an account?{\" \"}\n              <Box as=\"span\" color={\"teal.500\"}>\n                <Link to=\"/signup\">Sign up</Link>\n              </Box>\n            </Text>\n          </Stack>\n        </Stack>\n        <Box\n          py={{ base: \"0\", sm: \"8\" }}\n          px={{ base: \"4\", sm: \"10\" }}\n          bg={{ base: \"transparent\", sm: \"bg.surface\" }}\n          boxShadow={{ base: \"none\", sm: \"md\" }}\n          borderRadius={{ base: \"none\", sm: \"xl\" }}\n        >\n          <Stack spacing=\"6\">\n            <Stack spacing=\"5\">\n              <FormControl hidden={success}>\n                <PasswordField\n                  label=\"Password\"\n                  value={password}\n                  onChange={(e: any) => setPassword(e.currentTarget.value)}\n                />\n              </FormControl>\n\n              <Box hidden={!success}>\n                <Center color={\"teal.500\"}>\n                  <AiOutlineCheckCircle size={\"6rem\"} />\n                </Center>\n                <Heading my={2} size={{ base: \"xs\", md: \"sm\" }}>\n                  Password reset\n                </Heading>\n                <Text color=\"fg.muted\">\n                  <Box as=\"span\" color={\"teal.500\"}>\n                    <Link to=\"/signup\">\n                      Sign in now \n                    </Link>\n                  </Box>\n                </Text>\n              </Box>\n            </Stack>\n            <Stack hidden={success} spacing=\"6\">\n              <Button colorScheme=\"teal\" onClick={onResetPasswordClick}>Reset password</Button>\n            </Stack>\n          </Stack>\n        </Box>\n      </Stack>\n    </Container>\n  );\n};\n\nexport default ResetPassword;\n","import {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { useFormControlContext, useFormControlStyles } from \"./form-control\"\n\nexport interface FormLabelProps\n  extends HTMLChakraProps<\"label\">,\n    ThemingProps<\"FormLabel\"> {\n  /**\n   * @type React.ReactElement\n   */\n  requiredIndicator?: React.ReactElement\n  /**\n   * @type React.ReactNode\n   */\n  optionalIndicator?: React.ReactNode\n}\n\n/**\n * Used to enhance the usability of form controls.\n *\n * It is used to inform users as to what information\n * is requested for a form field.\n *\n * ♿️ Accessibility: Every form field should have a form label.\n */\nexport const FormLabel = forwardRef<FormLabelProps, \"label\">(function FormLabel(\n  passedProps,\n  ref,\n) {\n  const styles = useStyleConfig(\"FormLabel\", passedProps)\n  const props = omitThemingProps(passedProps)\n\n  const {\n    className,\n    children,\n    requiredIndicator = <RequiredIndicator />,\n    optionalIndicator = null,\n    ...rest\n  } = props\n\n  const field = useFormControlContext()\n  const ownProps = field?.getLabelProps(rest, ref) ?? { ref, ...rest }\n\n  return (\n    <chakra.label\n      {...ownProps}\n      className={cx(\"chakra-form__label\", props.className)}\n      __css={{\n        display: \"block\",\n        textAlign: \"start\",\n        ...styles,\n      }}\n    >\n      {children}\n      {field?.isRequired ? requiredIndicator : optionalIndicator}\n    </chakra.label>\n  )\n})\n\nFormLabel.displayName = \"FormLabel\"\n\nexport interface RequiredIndicatorProps extends HTMLChakraProps<\"span\"> {}\n\n/**\n * Used to show a \"required\" text or an asterisks (*) to indicate that\n * a field is required.\n */\nexport const RequiredIndicator = forwardRef<RequiredIndicatorProps, \"span\">(\n  function RequiredIndicator(props, ref) {\n    const field = useFormControlContext()\n    const styles = useFormControlStyles()\n\n    if (!field?.isRequired) return null\n\n    const className = cx(\"chakra-form__required-indicator\", props.className)\n\n    return (\n      <chakra.span\n        {...field?.getRequiredIndicatorProps(props, ref)}\n        __css={styles.requiredIndicator}\n        className={className}\n      />\n    )\n  },\n)\n\nRequiredIndicator.displayName = \"RequiredIndicator\"\n","// src/use-id.ts\nimport { useCallback, useId as useReactId, useMemo, useState } from \"react\";\nfunction useId(idProp, prefix) {\n  const id = useReactId();\n  return useMemo(\n    () => idProp || [prefix, id].filter(Boolean).join(\"-\"),\n    [idProp, prefix, id]\n  );\n}\nfunction useIds(idProp, ...prefixes) {\n  const id = useId(idProp);\n  return useMemo(() => {\n    return prefixes.map((prefix) => `${prefix}-${id}`);\n  }, [id, prefixes]);\n}\nfunction useOptionalPart(partId) {\n  const [id, setId] = useState(null);\n  const ref = useCallback(\n    (node) => {\n      setId(node ? partId : null);\n    },\n    [partId]\n  );\n  return { ref, id, isRendered: Boolean(id) };\n}\n\nexport {\n  useId,\n  useIds,\n  useOptionalPart\n};\n","// src/dom.ts\nfunction isElement(el) {\n  return el != null && typeof el == \"object\" && \"nodeType\" in el && el.nodeType === Node.ELEMENT_NODE;\n}\nfunction isHTMLElement(el) {\n  var _a;\n  if (!isElement(el)) {\n    return false;\n  }\n  const win = (_a = el.ownerDocument.defaultView) != null ? _a : window;\n  return el instanceof win.HTMLElement;\n}\nfunction getOwnerWindow(node) {\n  var _a, _b;\n  return isElement(node) ? (_b = (_a = getOwnerDocument(node)) == null ? void 0 : _a.defaultView) != null ? _b : window : window;\n}\nfunction getOwnerDocument(node) {\n  var _a;\n  return isElement(node) ? (_a = node.ownerDocument) != null ? _a : document : document;\n}\nfunction getEventWindow(event) {\n  var _a;\n  return (_a = event.view) != null ? _a : window;\n}\nfunction canUseDOM() {\n  return !!(typeof window !== \"undefined\" && window.document && window.document.createElement);\n}\nvar isBrowser = /* @__PURE__ */ canUseDOM();\nvar dataAttr = (condition) => condition ? \"\" : void 0;\nvar ariaAttr = (condition) => condition ? true : void 0;\nvar cx = (...classNames) => classNames.filter(Boolean).join(\" \");\nfunction getActiveElement(node) {\n  const doc = getOwnerDocument(node);\n  return doc == null ? void 0 : doc.activeElement;\n}\nfunction contains(parent, child) {\n  if (!parent)\n    return false;\n  return parent === child || parent.contains(child);\n}\nfunction addDomEvent(target, eventName, handler, options) {\n  target.addEventListener(eventName, handler, options);\n  return () => {\n    target.removeEventListener(eventName, handler, options);\n  };\n}\nfunction normalizeEventKey(event) {\n  const { key, keyCode } = event;\n  const isArrowKey = keyCode >= 37 && keyCode <= 40 && key.indexOf(\"Arrow\") !== 0;\n  const eventKey = isArrowKey ? `Arrow${key}` : key;\n  return eventKey;\n}\nfunction getRelatedTarget(event) {\n  var _a, _b;\n  const target = (_a = event.target) != null ? _a : event.currentTarget;\n  const activeElement = getActiveElement(target);\n  return (_b = event.relatedTarget) != null ? _b : activeElement;\n}\nfunction isRightClick(event) {\n  return event.button !== 0;\n}\n\nexport {\n  isElement,\n  isHTMLElement,\n  getOwnerWindow,\n  getOwnerDocument,\n  getEventWindow,\n  canUseDOM,\n  isBrowser,\n  dataAttr,\n  ariaAttr,\n  cx,\n  getActiveElement,\n  contains,\n  addDomEvent,\n  normalizeEventKey,\n  getRelatedTarget,\n  isRightClick\n};\n","// src/use-safe-layout-effect.ts\nimport { isBrowser } from \"@chakra-ui/utils\";\nimport { useEffect, useLayoutEffect } from \"react\";\nvar useSafeLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport {\n  useSafeLayoutEffect\n};\n","import {\n  useSafeLayoutEffect\n} from \"./chunk-IYF65QR3.mjs\";\n\n// src/use-callback-ref.ts\nimport { useCallback, useRef } from \"react\";\nfunction useCallbackRef(fn, deps = []) {\n  const ref = useRef(fn);\n  useSafeLayoutEffect(() => {\n    ref.current = fn;\n  });\n  return useCallback((...args) => {\n    var _a;\n    return (_a = ref.current) == null ? void 0 : _a.call(ref, ...args);\n  }, deps);\n}\n\nexport {\n  useCallbackRef\n};\n","import {\n  useId\n} from \"./chunk-EGV7XMQK.mjs\";\nimport {\n  useControllableProp\n} from \"./chunk-NUQE4USX.mjs\";\nimport {\n  useCallbackRef\n} from \"./chunk-TFWETJDV.mjs\";\n\n// src/use-disclosure.ts\nimport { callAllHandlers } from \"@chakra-ui/utils\";\nimport { useCallback, useState } from \"react\";\nfunction useDisclosure(props = {}) {\n  const {\n    onClose: onCloseProp,\n    onOpen: onOpenProp,\n    isOpen: isOpenProp,\n    id: idProp\n  } = props;\n  const onOpenPropCallbackRef = useCallbackRef(onOpenProp);\n  const onClosePropCallbackRef = useCallbackRef(onCloseProp);\n  const [isOpenState, setIsOpen] = useState(props.defaultIsOpen || false);\n  const [isControlled, isOpen] = useControllableProp(isOpenProp, isOpenState);\n  const id = useId(idProp, \"disclosure\");\n  const onClose = useCallback(() => {\n    if (!isControlled) {\n      setIsOpen(false);\n    }\n    onClosePropCallbackRef == null ? void 0 : onClosePropCallbackRef();\n  }, [isControlled, onClosePropCallbackRef]);\n  const onOpen = useCallback(() => {\n    if (!isControlled) {\n      setIsOpen(true);\n    }\n    onOpenPropCallbackRef == null ? void 0 : onOpenPropCallbackRef();\n  }, [isControlled, onOpenPropCallbackRef]);\n  const onToggle = useCallback(() => {\n    const action = isOpen ? onClose : onOpen;\n    action();\n  }, [isOpen, onOpen, onClose]);\n  return {\n    isOpen: !!isOpen,\n    onOpen,\n    onClose,\n    onToggle,\n    isControlled,\n    getButtonProps: (props2 = {}) => ({\n      ...props2,\n      \"aria-expanded\": isOpen,\n      \"aria-controls\": id,\n      onClick: callAllHandlers(props2.onClick, onToggle)\n    }),\n    getDisclosureProps: (props2 = {}) => ({\n      ...props2,\n      hidden: !isOpen,\n      id\n    })\n  };\n}\n\nexport {\n  useDisclosure\n};\n","import {\n  useCallbackRef\n} from \"./chunk-TFWETJDV.mjs\";\n\n// src/use-controllable.ts\nimport { runIfFn } from \"@chakra-ui/utils\";\nimport { useCallback, useState } from \"react\";\nfunction useControllableProp(prop, state) {\n  const isControlled = prop !== void 0;\n  const value = isControlled && typeof prop !== \"undefined\" ? prop : state;\n  return [isControlled, value];\n}\nfunction useControllableState(props) {\n  const {\n    value: valueProp,\n    defaultValue,\n    onChange,\n    shouldUpdate = (prev, next) => prev !== next\n  } = props;\n  const onChangeProp = useCallbackRef(onChange);\n  const shouldUpdateProp = useCallbackRef(shouldUpdate);\n  const [valueState, setValue] = useState(defaultValue);\n  const isControlled = valueProp !== void 0;\n  const value = isControlled ? valueProp : valueState;\n  const updateValue = useCallback(\n    (next) => {\n      const nextValue = runIfFn(next, value);\n      if (!shouldUpdateProp(value, nextValue)) {\n        return;\n      }\n      if (!isControlled) {\n        setValue(nextValue);\n      }\n      onChangeProp(nextValue);\n    },\n    [isControlled, onChangeProp, value, shouldUpdateProp]\n  );\n  return [value, updateValue];\n}\n\nexport {\n  useControllableProp,\n  useControllableState\n};\n","// src/use-merge-refs.ts\nimport { useMemo } from \"react\";\nfunction assignRef(ref, value) {\n  if (ref == null)\n    return;\n  if (typeof ref === \"function\") {\n    ref(value);\n    return;\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\nfunction useMergeRefs(...refs) {\n  return useMemo(() => {\n    if (refs.every((ref) => ref == null)) {\n      return null;\n    }\n    return (node) => {\n      refs.forEach((ref) => {\n        if (ref)\n          assignRef(ref, node);\n      });\n    };\n  }, refs);\n}\n\nexport {\n  assignRef,\n  useMergeRefs\n};\n"],"names":["PasswordField","forwardRef","props","ref","_useDisclosure","useDisclosure","isOpen","onToggle","inputRef","useRef","mergeRef","useMergeRefs","_jsxs","FormControl","children","_jsx","FormLabel","htmlFor","label","InputGroup","InputRightElement","IconButton","color","variant","icon","HiEyeOff","HiEye","onClick","current","focus","preventScroll","Input","_objectSpread","id","name","type","autoComplete","required","displayName","createQueryString","paginator","querystring","truncate","str","n","ellipsis","tooLong","length","singular","search","substr","lastIndexOf","parseError","error","_error$response","_error$response$data","fallbackErrorMessage","arguments","undefined","errorData","response","data","code","message","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","token","get","toast","useToast","cookieService","isAuthenticated","window","location","replace","_useState","useState","_useState2","password","setPassword","_useState3","_useState4","success","setSuccess","onResetPasswordClick","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","ApiCalls","resetPassword","payload","title","position","duration","isClosable","status","t0","stop","apply","Container","maxW","py","base","md","px","sm","Stack","spacing","Logo","textAlign","Heading","size","Text","Box","as","Link","to","bg","boxShadow","borderRadius","hidden","value","onChange","e","currentTarget","Center","AiOutlineCheckCircle","my","Button","colorScheme","passedProps","_a","styles","useStyleConfig","omitThemingProps","className","_props$requiredIndica","requiredIndicator","jsx","RequiredIndicator","_props$optionalIndica","optionalIndicator","rest","_objectWithoutProperties","_excluded","field","useFormControlContext","ownProps","getLabelProps","jsxs","chakra","cx","__css","display","isRequired","useFormControlStyles","span","getRequiredIndicatorProps","useId","idProp","prefix","useReactId","useMemo","filter","Boolean","join","canUseDOM","document","createElement","useSafeLayoutEffect","useLayoutEffect","useEffect","useCallbackRef","fn","deps","useCallback","_a2","_len","args","Array","_key","call","concat","onCloseProp","onClose","onOpenProp","onOpen","isOpenProp","onOpenPropCallbackRef","onClosePropCallbackRef","defaultIsOpen","isOpenState","setIsOpen","_useControllableProp","prop","state","isControlled","useControllableProp","_useControllableProp2","getButtonProps","props2","callAllHandlers","getDisclosureProps","refs","every","node","forEach","Error","assignRef"],"sourceRoot":""}