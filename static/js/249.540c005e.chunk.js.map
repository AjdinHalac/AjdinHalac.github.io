{"version":3,"file":"static/js/249.540c005e.chunk.js","mappings":"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","sources":["utils/helpers.ts","views/landing/ConfirmEmail.tsx"],"sourcesContent":["import querystring from 'querystring';\n\nexport function createQueryString(paginator: any) {\n    return querystring.stringify(paginator);\n}\n\nexport const truncate = (str: string, n: number, ellipsis: string) => {\n    const tooLong = str.length > n;\n    const singular = str.search(/\\s/) === -1;\n\n    // Edge case where someone enters a ridiculously long string.\n    str = tooLong ? str.substr(0, n - 1) : str;\n\n    if (!singular) {\n        str = ellipsis && tooLong ? str.substr(0, str.lastIndexOf(' ')) : str;\n    }\n\n    return tooLong ? str + ellipsis : str;\n};\n\nexport const parseError = (error: any, fallbackErrorMessage = '') => {\n    const errorData = error?.response?.data?.error;\n\n    if (errorData === undefined) {\n        return 'Unexpected error occurred...'\n    }\n\n    switch (errorData.code) {\n        case '0':\n            return errorData.message;\n        case 'TOKEN.020':\n            return 'Token does not exist.'\n        case 'TOKEN.030':\n            return 'Token could not be verified.'\n        case 'TOKEN.040':\n            return 'Token could not be deleted.'\n        default:\n            return fallbackErrorMessage;\n    }\n};\n\nexport const isNullOrUndefined = (value?: unknown): boolean => {\n    return value === undefined || value === null;\n};\n\nexport const isEmailValid = (email: string) => {\n    const re = /\\S+@\\S+\\.\\S+/;\n    return re.test(email);\n};\n\nexport const isEventKeyEnter = (event: any) => {\n    return event.key === 'Enter';\n};\n","import { ReactElement, useEffect, useState } from \"react\";\nimport ApiCalls from \"../../domain/landing/api/ApiCalls\";\nimport { parseError } from \"../../utils/helpers\";\nimport {\n  Box,\n  Center,\n  Container,\n  Heading,\n  Stack,\n  Text,\n  useToast,\n} from \"@chakra-ui/react\";\nimport { Link, useSearchParams } from \"react-router-dom\";\nimport { Logo } from \"../../components/common/Logo\";\nimport { AiOutlineCheckCircle, AiOutlineCloseCircle } from \"react-icons/ai\";\n\nconst ConfirmEmail = (): ReactElement => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const token = searchParams.get(\"token\");\n  const toast = useToast();\n\n  const [success, setSuccess] = useState<boolean>(false);\n  const confirmEmail = async () => {\n    try {\n      await ApiCalls.confirmEmail({\n        payload: { token: token ? token : \"invalid\" },\n      });\n      setSuccess(true);\n      toast({\n        title: \"Email confirmed\",\n        position: \"top-right\",\n        duration: 5000,\n        isClosable: true,\n        status: \"success\",\n      });\n    } catch (err) {\n      toast({\n        title: parseError(err),\n        position: \"top-right\",\n        duration: 5000,\n        isClosable: true,\n        status: \"error\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    confirmEmail();\n  }, []);\n\n  return (\n    <Container\n      maxW=\"lg\"\n      py={{ base: \"12\", md: \"24\" }}\n      px={{ base: \"0\", sm: \"8\" }}\n    >\n      <Stack spacing=\"8\">\n        <Stack spacing=\"6\">\n          <Logo color={\"teal.500\"} />\n          <Stack spacing={{ base: \"2\", md: \"3\" }} textAlign=\"center\">\n            <Heading size={{ base: \"xs\", md: \"sm\" }}>\n              Confirm your email\n            </Heading>\n            <Text color=\"fg.muted\">\n              This is an automated process, please wait...\n            </Text>\n          </Stack>\n        </Stack>\n        <Box\n          py={{ base: \"0\", sm: \"8\" }}\n          px={{ base: \"4\", sm: \"10\" }}\n          bg={{ base: \"transparent\", sm: \"bg.surface\" }}\n          boxShadow={{ base: \"none\", sm: \"md\" }}\n          borderRadius={{ base: \"none\", sm: \"xl\" }}\n        >\n          <Stack spacing=\"6\">\n            <Stack spacing=\"5\">\n              <Box hidden={success}>\n                <Center color={\"teal.500\"}>\n                  <AiOutlineCloseCircle size={\"6rem\"} />\n                </Center>\n                <Heading my={2} size={{ base: \"xs\", md: \"sm\" }}>\n                  Confirming your email\n                </Heading>\n                <Text color=\"fg.muted\">Don't close this page.</Text>\n              </Box>\n              <Box hidden={!success}>\n                <Center color={\"teal.500\"}>\n                  <AiOutlineCheckCircle size={\"6rem\"} />\n                </Center>\n                <Heading my={2} size={{ base: \"xs\", md: \"sm\" }}>\n                  Email confirmed\n                </Heading>\n                <Text color=\"fg.muted\">\n                  You can close this page now. {\" \"}\n                  <Box as=\"span\" color={\"teal.500\"}>\n                    <Link to=\"/signin\">Continue</Link>\n                  </Box>\n                </Text>\n              </Box>\n            </Stack>\n          </Stack>\n        </Box>\n      </Stack>\n    </Container>\n  );\n};\n\nexport default ConfirmEmail;\n"],"names":["createQueryString","paginator","querystring","truncate","str","n","ellipsis","tooLong","length","singular","search","substr","lastIndexOf","parseError","error","_error$response","_error$response$data","fallbackErrorMessage","arguments","undefined","errorData","response","data","code","message","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","token","get","toast","useToast","_useState","useState","_useState2","success","setSuccess","confirmEmail","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","ApiCalls","payload","title","position","duration","isClosable","status","t0","stop","apply","useEffect","_jsx","Container","maxW","py","base","md","px","sm","children","_jsxs","Stack","spacing","Logo","color","textAlign","Heading","size","Text","Box","bg","boxShadow","borderRadius","hidden","Center","AiOutlineCloseCircle","my","AiOutlineCheckCircle","as","Link","to"],"sourceRoot":""}