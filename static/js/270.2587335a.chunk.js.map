{"version":3,"file":"static/js/270.2587335a.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/checkbox/src/checkbox-context.ts","../node_modules/@chakra-ui/checkbox/src/checkbox-icon.tsx","../node_modules/@chakra-ui/visually-hidden/src/visually-hidden.style.ts","../node_modules/@zag-js/dom-query/dist/platform.mjs","../node_modules/@zag-js/focus-visible/dist/index.mjs","../node_modules/@chakra-ui/checkbox/src/use-checkbox.ts","../node_modules/utilities/object-utils/src/omit.ts","../node_modules/@chakra-ui/checkbox/src/checkbox.tsx","../node_modules/@chakra-ui/checkbox/src/use-initial-animation-state.tsx","../node_modules/@chakra-ui/layout/src/stack/h-stack.tsx"],"sourcesContent":["import { createContext } from \"@chakra-ui/react-context\"\nimport { CheckboxGroupContext } from \"./checkbox-types\"\n\nexport const [CheckboxGroupProvider, useCheckboxGroupContext] =\n  createContext<CheckboxGroupContext>({\n    name: \"CheckboxGroupContext\",\n    strict: false,\n  })\n","import { chakra, HTMLChakraProps, PropsOf } from \"@chakra-ui/system\"\n\nfunction CheckIcon(props: PropsOf<typeof chakra.svg>) {\n  return (\n    <chakra.svg\n      width=\"1.2em\"\n      viewBox=\"0 0 12 10\"\n      style={{\n        fill: \"none\",\n        strokeWidth: 2,\n        stroke: \"currentColor\",\n        strokeDasharray: 16,\n      }}\n      {...props}\n    >\n      <polyline points=\"1.5 6 4.5 9 10.5 1\" />\n    </chakra.svg>\n  )\n}\n\nfunction IndeterminateIcon(props: PropsOf<typeof chakra.svg>) {\n  return (\n    <chakra.svg\n      width=\"1.2em\"\n      viewBox=\"0 0 24 24\"\n      style={{ stroke: \"currentColor\", strokeWidth: 4 }}\n      {...props}\n    >\n      <line x1=\"21\" x2=\"3\" y1=\"12\" y2=\"12\" />\n    </chakra.svg>\n  )\n}\n\nexport interface CheckboxIconProps extends HTMLChakraProps<\"svg\"> {\n  /**\n   * @default false\n   */\n  isIndeterminate?: boolean\n  /**\n   * @default false\n   */\n  isChecked?: boolean\n}\n\n/**\n * CheckboxIcon is used to visually indicate the checked or indeterminate\n * state of a checkbox.\n *\n * @todo allow users pass their own icon svgs\n */\nexport function CheckboxIcon(props: CheckboxIconProps) {\n  const { isIndeterminate, isChecked, ...rest } = props\n  const BaseIcon = isIndeterminate ? IndeterminateIcon : CheckIcon\n\n  return isChecked || isIndeterminate ? (\n    <chakra.div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"100%\",\n      }}\n    >\n      <BaseIcon {...rest} />\n    </chakra.div>\n  ) : null\n}\n","/**\n * Styles to visually hide an element\n * but make it accessible to screen-readers\n */\nexport const visuallyHiddenStyle: React.CSSProperties = {\n  border: \"0\",\n  clip: \"rect(0, 0, 0, 0)\",\n  height: \"1px\",\n  width: \"1px\",\n  margin: \"-1px\",\n  padding: \"0\",\n  overflow: \"hidden\",\n  whiteSpace: \"nowrap\",\n  position: \"absolute\",\n}\n","const isDom = () => typeof document !== \"undefined\";\nfunction getPlatform() {\n  const agent = navigator.userAgentData;\n  return agent?.platform ?? navigator.platform;\n}\nconst pt = (v) => isDom() && v.test(getPlatform());\nconst ua = (v) => isDom() && v.test(navigator.userAgent);\nconst vn = (v) => isDom() && v.test(navigator.vendor);\nconst isTouchDevice = () => isDom() && !!navigator.maxTouchPoints;\nconst isMac = () => pt(/^Mac/) && !isTouchDevice();\nconst isIPhone = () => pt(/^iPhone/);\nconst isSafari = () => isApple() && vn(/apple/i);\nconst isFirefox = () => ua(/firefox\\//i);\nconst isApple = () => pt(/mac|iphone|ipad|ipod/i);\nconst isIos = () => isApple() && !isMac();\n\nexport { getPlatform, isApple, isDom, isFirefox, isIPhone, isIos, isMac, isSafari, isTouchDevice };\n","import { isDom } from '@zag-js/dom-query';\n\nlet hasSetup = false;\nlet modality = null;\nlet hasEventBeforeFocus = false;\nlet hasBlurredWindowRecently = false;\nconst handlers = /* @__PURE__ */ new Set();\nfunction trigger(modality2, event) {\n  handlers.forEach((handler) => handler(modality2, event));\n}\nconst isMac = typeof window !== \"undefined\" && window.navigator != null ? /^Mac/.test(window.navigator.platform) : false;\nfunction isValidKey(e) {\n  return !(e.metaKey || !isMac && e.altKey || e.ctrlKey || e.key === \"Control\" || e.key === \"Shift\" || e.key === \"Meta\");\n}\nfunction onKeyboardEvent(event) {\n  hasEventBeforeFocus = true;\n  if (isValidKey(event)) {\n    modality = \"keyboard\";\n    trigger(\"keyboard\", event);\n  }\n}\nfunction onPointerEvent(event) {\n  modality = \"pointer\";\n  if (event.type === \"mousedown\" || event.type === \"pointerdown\") {\n    hasEventBeforeFocus = true;\n    const target = event.composedPath ? event.composedPath()[0] : event.target;\n    let matches = false;\n    try {\n      matches = target.matches(\":focus-visible\");\n    } catch {\n    }\n    if (matches)\n      return;\n    trigger(\"pointer\", event);\n  }\n}\nfunction isVirtualClick(event) {\n  if (event.mozInputSource === 0 && event.isTrusted)\n    return true;\n  return event.detail === 0 && !event.pointerType;\n}\nfunction onClickEvent(e) {\n  if (isVirtualClick(e)) {\n    hasEventBeforeFocus = true;\n    modality = \"virtual\";\n  }\n}\nfunction onWindowFocus(event) {\n  if (event.target === window || event.target === document) {\n    return;\n  }\n  if (!hasEventBeforeFocus && !hasBlurredWindowRecently) {\n    modality = \"virtual\";\n    trigger(\"virtual\", event);\n  }\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = false;\n}\nfunction onWindowBlur() {\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = true;\n}\nfunction isFocusVisible() {\n  return modality !== \"pointer\";\n}\nfunction setupGlobalFocusEvents() {\n  if (!isDom() || hasSetup) {\n    return;\n  }\n  const { focus } = HTMLElement.prototype;\n  HTMLElement.prototype.focus = function focusElement(...args) {\n    hasEventBeforeFocus = true;\n    focus.apply(this, args);\n  };\n  document.addEventListener(\"keydown\", onKeyboardEvent, true);\n  document.addEventListener(\"keyup\", onKeyboardEvent, true);\n  document.addEventListener(\"click\", onClickEvent, true);\n  window.addEventListener(\"focus\", onWindowFocus, true);\n  window.addEventListener(\"blur\", onWindowBlur, false);\n  if (typeof PointerEvent !== \"undefined\") {\n    document.addEventListener(\"pointerdown\", onPointerEvent, true);\n    document.addEventListener(\"pointermove\", onPointerEvent, true);\n    document.addEventListener(\"pointerup\", onPointerEvent, true);\n  } else {\n    document.addEventListener(\"mousedown\", onPointerEvent, true);\n    document.addEventListener(\"mousemove\", onPointerEvent, true);\n    document.addEventListener(\"mouseup\", onPointerEvent, true);\n  }\n  hasSetup = true;\n}\nfunction trackFocusVisible(fn) {\n  setupGlobalFocusEvents();\n  fn(isFocusVisible());\n  const handler = () => fn(isFocusVisible());\n  handlers.add(handler);\n  return () => {\n    handlers.delete(handler);\n  };\n}\nfunction trackInteractionModality(fn) {\n  setupGlobalFocusEvents();\n  fn(modality);\n  const handler = () => fn(modality);\n  handlers.add(handler);\n  return () => {\n    handlers.delete(handler);\n  };\n}\nfunction setInteractionModality(value) {\n  modality = value;\n  trigger(value, null);\n}\nfunction getInteractionModality() {\n  return modality;\n}\n\nexport { getInteractionModality, setInteractionModality, trackFocusVisible, trackInteractionModality };\n","import { useFormControlProps } from \"@chakra-ui/form-control\"\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\"\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\"\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\"\nimport type { PropGetter } from \"@chakra-ui/react-types\"\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\"\nimport { callAllHandlers, dataAttr } from \"@chakra-ui/shared-utils\"\nimport { omit } from \"@chakra-ui/object-utils\"\nimport { visuallyHiddenStyle } from \"@chakra-ui/visually-hidden\"\nimport { trackFocusVisible } from \"@zag-js/focus-visible\"\nimport { useCallback, useEffect, useRef, useState } from \"react\"\nimport { CheckboxState, UseCheckboxProps } from \"./checkbox-types\"\n\n/**\n * useCheckbox that provides all the state and focus management logic\n * for a checkbox. It is consumed by the `Checkbox` component\n *\n * @see Docs https://chakra-ui.com/checkbox#hooks\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/checkbox/\n */\nexport function useCheckbox(props: UseCheckboxProps = {}) {\n  const formControlProps = useFormControlProps(props)\n  const {\n    isDisabled,\n    isReadOnly,\n    isRequired,\n    isInvalid,\n    id,\n    onBlur,\n    onFocus,\n    \"aria-describedby\": ariaDescribedBy,\n  } = formControlProps\n\n  const {\n    defaultChecked,\n    isChecked: checkedProp,\n    isFocusable,\n    onChange,\n    isIndeterminate,\n    name,\n    value,\n    tabIndex = undefined,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-invalid\": ariaInvalid,\n    ...rest\n  } = props\n\n  const htmlProps = omit(rest, [\n    \"isDisabled\",\n    \"isReadOnly\",\n    \"isRequired\",\n    \"isInvalid\",\n    \"id\",\n    \"onBlur\",\n    \"onFocus\",\n    \"aria-describedby\",\n  ])\n\n  const onChangeProp = useCallbackRef(onChange)\n  const onBlurProp = useCallbackRef(onBlur)\n  const onFocusProp = useCallbackRef(onFocus)\n\n  const [isFocusVisible, setIsFocusVisible] = useState(false)\n  const [isFocused, setFocused] = useState(false)\n  const [isHovered, setHovered] = useState(false)\n  const [isActive, setActive] = useState(false)\n\n  useEffect(() => {\n    return trackFocusVisible(setIsFocusVisible)\n  }, [])\n\n  const inputRef = useRef<HTMLInputElement>(null)\n  const [rootIsLabelElement, setRootIsLabelElement] = useState(true)\n\n  const [checkedState, setCheckedState] = useState(!!defaultChecked)\n\n  const isControlled = checkedProp !== undefined\n  const isChecked = isControlled ? checkedProp : checkedState\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      if (isReadOnly || isDisabled) {\n        event.preventDefault()\n        return\n      }\n\n      if (!isControlled) {\n        if (isChecked) {\n          setCheckedState(event.target.checked)\n        } else {\n          setCheckedState(isIndeterminate ? true : event.target.checked)\n        }\n      }\n\n      onChangeProp?.(event)\n    },\n    [\n      isReadOnly,\n      isDisabled,\n      isChecked,\n      isControlled,\n      isIndeterminate,\n      onChangeProp,\n    ],\n  )\n\n  useSafeLayoutEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.indeterminate = Boolean(isIndeterminate)\n    }\n  }, [isIndeterminate])\n\n  useUpdateEffect(() => {\n    if (isDisabled) {\n      setFocused(false)\n    }\n  }, [isDisabled, setFocused])\n\n  /**\n   * HTMLFormElement.reset() should reset the checkbox state\n   */\n  useSafeLayoutEffect(() => {\n    const el = inputRef.current\n    if (!el?.form) return\n    const formResetListener = () => {\n      setCheckedState(!!defaultChecked)\n    }\n    el.form.addEventListener(\"reset\", formResetListener)\n    return () => el.form?.removeEventListener(\"reset\", formResetListener)\n  }, [])\n\n  const trulyDisabled = isDisabled && !isFocusable\n\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      if (event.key === \" \") {\n        setActive(true)\n      }\n    },\n    [setActive],\n  )\n\n  const onKeyUp = useCallback(\n    (event: React.KeyboardEvent) => {\n      if (event.key === \" \") {\n        setActive(false)\n      }\n    },\n    [setActive],\n  )\n\n  /**\n   * Sync state with uncontrolled form libraries like `react-hook-form`.\n   *\n   * These libraries set the checked value for input fields\n   * using their refs. For the checkbox, it sets `ref.current.checked = true | false` directly.\n   *\n   * This means the `isChecked` state will get out of sync with `ref.current.checked`,\n   * even though the input validation with work, the UI will not be up to date.\n   *\n   * Let's correct that by checking and syncing the state accordingly.\n   */\n  useSafeLayoutEffect(() => {\n    if (!inputRef.current) return\n    const notInSync = inputRef.current.checked !== isChecked\n    if (notInSync) {\n      setCheckedState(inputRef.current.checked)\n    }\n  }, [inputRef.current])\n\n  const getCheckboxProps: PropGetter = useCallback(\n    (props = {}, forwardedRef = null) => {\n      const onPressDown = (event: React.MouseEvent) => {\n        // On mousedown, the input blurs and returns focus to the `body`,\n        // we need to prevent this. Native checkboxes keeps focus on `input`\n        if (isFocused) {\n          event.preventDefault()\n        }\n        setActive(true)\n      }\n\n      return {\n        ...props,\n        ref: forwardedRef,\n        \"data-active\": dataAttr(isActive),\n        \"data-hover\": dataAttr(isHovered),\n        \"data-checked\": dataAttr(isChecked),\n        \"data-focus\": dataAttr(isFocused),\n        \"data-focus-visible\": dataAttr(isFocused && isFocusVisible),\n        \"data-indeterminate\": dataAttr(isIndeterminate),\n        \"data-disabled\": dataAttr(isDisabled),\n        \"data-invalid\": dataAttr(isInvalid),\n        \"data-readonly\": dataAttr(isReadOnly),\n        \"aria-hidden\": true,\n        onMouseDown: callAllHandlers(props.onMouseDown, onPressDown),\n        onMouseUp: callAllHandlers(props.onMouseUp, () => setActive(false)),\n        onMouseEnter: callAllHandlers(props.onMouseEnter, () =>\n          setHovered(true),\n        ),\n        onMouseLeave: callAllHandlers(props.onMouseLeave, () =>\n          setHovered(false),\n        ),\n      }\n    },\n    [\n      isActive,\n      isChecked,\n      isDisabled,\n      isFocused,\n      isFocusVisible,\n      isHovered,\n      isIndeterminate,\n      isInvalid,\n      isReadOnly,\n    ],\n  )\n\n  const getIndicatorProps: PropGetter = useCallback(\n    (props = {}, forwardedRef = null) => ({\n      ...props,\n      ref: forwardedRef,\n      \"data-active\": dataAttr(isActive),\n      \"data-hover\": dataAttr(isHovered),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-focus\": dataAttr(isFocused),\n      \"data-focus-visible\": dataAttr(isFocused && isFocusVisible),\n      \"data-indeterminate\": dataAttr(isIndeterminate),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n    }),\n    [\n      isActive,\n      isChecked,\n      isDisabled,\n      isFocused,\n      isFocusVisible,\n      isHovered,\n      isIndeterminate,\n      isInvalid,\n      isReadOnly,\n    ],\n  )\n\n  const getRootProps: PropGetter = useCallback(\n    (props = {}, forwardedRef = null) => ({\n      ...htmlProps,\n      ...props,\n      ref: mergeRefs(forwardedRef, (node: HTMLElement) => {\n        if (!node) return\n        setRootIsLabelElement(node.tagName === \"LABEL\")\n      }),\n      onClick: callAllHandlers(props.onClick, () => {\n        /**\n         * Accessibility:\n         *\n         * Ideally, `getRootProps` should be spread unto a `label` element.\n         *\n         * If the element was changed using the `as` prop or changing\n         * the dom node `getRootProps` is spread unto (to a `div` or `span`), we'll trigger\n         * click on the input when the element is clicked.\n         * @see Issue https://github.com/chakra-ui/chakra-ui/issues/3480\n         */\n        if (!rootIsLabelElement) {\n          inputRef.current?.click()\n          requestAnimationFrame(() => {\n            inputRef.current?.focus({ preventScroll: true })\n          })\n        }\n      }),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-invalid\": dataAttr(isInvalid),\n    }),\n    [htmlProps, isDisabled, isChecked, isInvalid, rootIsLabelElement],\n  )\n\n  const getInputProps: PropGetter = useCallback(\n    (props = {}, forwardedRef = null) => {\n      return {\n        ...props,\n        ref: mergeRefs(inputRef, forwardedRef),\n        type: \"checkbox\",\n        name,\n        value,\n        id,\n        tabIndex,\n        onChange: callAllHandlers(props.onChange, handleChange),\n        onBlur: callAllHandlers(props.onBlur, onBlurProp, () =>\n          setFocused(false),\n        ),\n        onFocus: callAllHandlers(props.onFocus, onFocusProp, () =>\n          setFocused(true),\n        ),\n        onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n        onKeyUp: callAllHandlers(props.onKeyUp, onKeyUp),\n        required: isRequired,\n        checked: isChecked,\n        disabled: trulyDisabled,\n        readOnly: isReadOnly,\n        \"aria-label\": ariaLabel,\n        \"aria-labelledby\": ariaLabelledBy,\n        \"aria-invalid\": ariaInvalid ? Boolean(ariaInvalid) : isInvalid,\n        \"aria-describedby\": ariaDescribedBy,\n        \"aria-disabled\": isDisabled,\n        style: visuallyHiddenStyle,\n      }\n    },\n    [\n      name,\n      value,\n      id,\n      handleChange,\n      onBlurProp,\n      onFocusProp,\n      onKeyDown,\n      onKeyUp,\n      isRequired,\n      isChecked,\n      trulyDisabled,\n      isReadOnly,\n      ariaLabel,\n      ariaLabelledBy,\n      ariaInvalid,\n      isInvalid,\n      ariaDescribedBy,\n      isDisabled,\n      tabIndex,\n    ],\n  )\n\n  const getLabelProps: PropGetter = useCallback(\n    (props = {}, forwardedRef = null) => ({\n      ...props,\n      ref: forwardedRef,\n      onMouseDown: callAllHandlers(props.onMouseDown, stopEvent),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-invalid\": dataAttr(isInvalid),\n    }),\n    [isChecked, isDisabled, isInvalid],\n  )\n\n  const state: CheckboxState = {\n    isInvalid,\n    isFocused,\n    isChecked,\n    isActive,\n    isHovered,\n    isIndeterminate,\n    isDisabled,\n    isReadOnly,\n    isRequired,\n  }\n\n  return {\n    state,\n    getRootProps,\n    getCheckboxProps,\n    getIndicatorProps,\n    getInputProps,\n    getLabelProps,\n    htmlProps,\n  }\n}\n\n/**\n * Prevent `onBlur` being fired when the checkbox label is touched\n */\nfunction stopEvent(event: React.SyntheticEvent) {\n  event.preventDefault()\n  event.stopPropagation()\n}\n\nexport type UseCheckboxReturn = ReturnType<typeof useCheckbox>\n","export function omit<T extends Record<string, any>, K extends keyof T>(\n  object: T,\n  keysToOmit: K[] = [],\n) {\n  const clone: Record<string, unknown> = Object.assign({}, object)\n  for (const key of keysToOmit) {\n    if (key in clone) {\n      delete clone[key as string]\n    }\n  }\n  return clone as Omit<T, K>\n}\n","import { callAll, cx } from \"@chakra-ui/shared-utils\"\nimport {\n  HTMLChakraProps,\n  PropsOf,\n  SystemStyleObject,\n  ThemingProps,\n  chakra,\n  forwardRef,\n  keyframes,\n  omitThemingProps,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\nimport { cloneElement, useMemo } from \"react\"\nimport { useCheckboxGroupContext } from \"./checkbox-context\"\nimport { CheckboxIcon } from \"./checkbox-icon\"\nimport { CheckboxOptions, UseCheckboxProps } from \"./checkbox-types\"\nimport { useCheckbox } from \"./use-checkbox\"\nimport { useInitialAnimationState } from \"./use-initial-animation-state\"\n\nconst controlStyles: SystemStyleObject = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  verticalAlign: \"top\",\n  userSelect: \"none\",\n  flexShrink: 0,\n}\n\nconst rootStyles: SystemStyleObject = {\n  cursor: \"pointer\",\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  verticalAlign: \"top\",\n  position: \"relative\",\n}\n\nconst checkAnim = keyframes({\n  from: {\n    opacity: 0,\n    strokeDashoffset: 16,\n    transform: \"scale(0.95)\",\n  },\n  to: {\n    opacity: 1,\n    strokeDashoffset: 0,\n    transform: \"scale(1)\",\n  },\n})\n\nconst indeterminateOpacityAnim = keyframes({\n  from: {\n    opacity: 0,\n  },\n  to: {\n    opacity: 1,\n  },\n})\nconst indeterminateScaleAnim = keyframes({\n  from: {\n    transform: \"scaleX(0.65)\",\n  },\n  to: {\n    transform: \"scaleX(1)\",\n  },\n})\n\ntype CheckboxControlProps = Omit<HTMLChakraProps<\"div\">, keyof UseCheckboxProps>\n\ntype BaseInputProps = Pick<\n  PropsOf<\"input\">,\n  \"onBlur\" | \"checked\" | \"defaultChecked\"\n>\n\nexport interface CheckboxProps\n  extends CheckboxControlProps,\n    BaseInputProps,\n    ThemingProps<\"Checkbox\">,\n    UseCheckboxProps,\n    CheckboxOptions {}\n\n/**\n * Checkbox\n *\n * React component used in forms when a user needs to select\n * multiple values from several options.\n *\n * @see Docs https://chakra-ui.com/checkbox\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/checkbox/\n */\nexport const Checkbox = forwardRef<CheckboxProps, \"input\">(function Checkbox(\n  props,\n  ref,\n) {\n  const group = useCheckboxGroupContext()\n\n  const mergedProps = { ...group, ...props } as CheckboxProps\n  const styles = useMultiStyleConfig(\"Checkbox\", mergedProps)\n\n  const ownProps = omitThemingProps(props)\n\n  const {\n    spacing = \"0.5rem\",\n    className,\n    children,\n    iconColor,\n    iconSize,\n    icon = <CheckboxIcon />,\n    isChecked: isCheckedProp,\n    isDisabled = group?.isDisabled,\n    onChange: onChangeProp,\n    inputProps,\n    ...rest\n  } = ownProps\n\n  let isChecked = isCheckedProp\n  if (group?.value && ownProps.value) {\n    isChecked = group.value.includes(ownProps.value)\n  }\n\n  let onChange = onChangeProp\n  if (group?.onChange && ownProps.value) {\n    onChange = callAll(group.onChange, onChangeProp)\n  }\n\n  const {\n    state,\n    getInputProps,\n    getCheckboxProps,\n    getLabelProps,\n    getRootProps,\n  } = useCheckbox({\n    ...rest,\n    isDisabled,\n    isChecked,\n    onChange,\n  })\n\n  const shouldAnimate = useInitialAnimationState(state.isChecked)\n\n  const iconStyles: SystemStyleObject = useMemo(\n    () => ({\n      animation: !shouldAnimate\n        ? undefined\n        : state.isIndeterminate\n        ? `${indeterminateOpacityAnim} 20ms linear, ${indeterminateScaleAnim} 200ms linear`\n        : `${checkAnim} 200ms linear`,\n      fontSize: iconSize,\n      color: iconColor,\n      ...styles.icon,\n    }),\n    [iconColor, iconSize, shouldAnimate, state.isIndeterminate, styles.icon],\n  )\n\n  const clonedIcon = cloneElement(icon, {\n    __css: iconStyles,\n    isIndeterminate: state.isIndeterminate,\n    isChecked: state.isChecked,\n  })\n\n  return (\n    <chakra.label\n      __css={{ ...rootStyles, ...styles.container }}\n      className={cx(\"chakra-checkbox\", className)}\n      {...getRootProps()}\n    >\n      <input\n        className=\"chakra-checkbox__input\"\n        {...getInputProps(inputProps, ref)}\n      />\n      <chakra.span\n        __css={{ ...controlStyles, ...styles.control }}\n        className=\"chakra-checkbox__control\"\n        {...getCheckboxProps()}\n      >\n        {clonedIcon}\n      </chakra.span>\n      {children && (\n        <chakra.span\n          className=\"chakra-checkbox__label\"\n          {...getLabelProps()}\n          __css={{\n            marginStart: spacing,\n            ...styles.label,\n          }}\n        >\n          {children}\n        </chakra.span>\n      )}\n    </chakra.label>\n  )\n})\n\nCheckbox.displayName = \"Checkbox\"\n","import { useState } from \"react\"\n\nexport function useInitialAnimationState(isChecked: boolean) {\n  const [previousIsChecked, setPreviousIsChecked] = useState(isChecked)\n  const [shouldAnimate, setShouldAnimate] = useState(false)\n\n  if (isChecked !== previousIsChecked) {\n    setShouldAnimate(true)\n    setPreviousIsChecked(isChecked)\n  }\n\n  return shouldAnimate\n}\n","import { forwardRef } from \"@chakra-ui/system\"\n\nimport { Stack, StackProps } from \"./stack\"\n\n/**\n * A view that arranges its children in a horizontal line.\n *\n * @see Docs https://chakra-ui.com/docs/components/stack\n */\nexport const HStack = forwardRef<StackProps, \"div\">((props, ref) => (\n  <Stack align=\"center\" {...props} direction=\"row\" ref={ref} />\n))\n\nHStack.displayName = \"HStack\"\n"],"names":["_createContext","createContext","name","strict","_createContext2","_slicedToArray","useCheckboxGroupContext","CheckIcon","props","jsx","chakra","svg","_objectSpread","width","viewBox","style","fill","strokeWidth","stroke","strokeDasharray","children","points","IndeterminateIcon","x1","x2","y1","y2","CheckboxIcon","isIndeterminate","isChecked","rest","_objectWithoutProperties","_excluded","BaseIcon","div","display","alignItems","justifyContent","height","visuallyHiddenStyle","border","clip","margin","padding","overflow","whiteSpace","position","isDom","document","hasSetup","modality","hasEventBeforeFocus","hasBlurredWindowRecently","handlers","Set","trigger","modality2","event","forEach","handler","isMac","window","navigator","test","platform","onKeyboardEvent","e","metaKey","altKey","ctrlKey","key","onPointerEvent","type","target","composedPath","matches","_unused","onClickEvent","mozInputSource","isTrusted","detail","pointerType","onWindowFocus","onWindowBlur","isFocusVisible","setupGlobalFocusEvents","focus","HTMLElement","prototype","_len","arguments","length","args","Array","_key","apply","this","addEventListener","PointerEvent","trackFocusVisible","fn","add","delete","useCheckbox","undefined","formControlProps","useFormControlProps","isDisabled","isReadOnly","isRequired","isInvalid","id","onBlur","onFocus","ariaDescribedBy","defaultChecked","checkedProp","isFocusable","onChange","value","_props$tabIndex","tabIndex","ariaLabel","ariaLabelledBy","ariaInvalid","htmlProps","object","_step","keysToOmit","clone","Object","assign","_iterator","_createForOfIteratorHelper","s","n","done","err","f","omit","onChangeProp","useCallbackRef","onBlurProp","onFocusProp","_useState","useState","_useState2","setIsFocusVisible","_useState3","_useState4","isFocused","setFocused","_useState5","_useState6","isHovered","setHovered","_useState7","_useState8","isActive","setActive","useEffect","inputRef","useRef","_useState9","_useState10","rootIsLabelElement","setRootIsLabelElement","_useState11","_useState12","checkedState","setCheckedState","isControlled","handleChange","useCallback","preventDefault","checked","useSafeLayoutEffect","current","indeterminate","Boolean","useUpdateEffect","el","form","formResetListener","_a","removeEventListener","trulyDisabled","onKeyDown","onKeyUp","getCheckboxProps","props2","forwardedRef","ref","dataAttr","onMouseDown","callAllHandlers","onMouseUp","onMouseEnter","onMouseLeave","getIndicatorProps","getRootProps","mergeRefs","node","tagName","onClick","click","requestAnimationFrame","_a2","preventScroll","getInputProps","required","disabled","readOnly","getLabelProps","stopEvent","state","stopPropagation","controlStyles","verticalAlign","userSelect","flexShrink","rootStyles","cursor","checkAnim","keyframes","from","opacity","strokeDashoffset","transform","to","indeterminateOpacityAnim","indeterminateScaleAnim","Checkbox","forwardRef","group","mergedProps","styles","useMultiStyleConfig","ownProps","omitThemingProps","_ownProps$spacing","spacing","className","iconColor","iconSize","_ownProps$icon","icon","isCheckedProp","_ownProps$isDisabled","inputProps","includes","callAll","_useCheckbox","shouldAnimate","previousIsChecked","setPreviousIsChecked","setShouldAnimate","useInitialAnimationState","iconStyles","useMemo","animation","concat","fontSize","color","clonedIcon","cloneElement","__css","jsxs","label","container","cx","span","control","marginStart","displayName","HStack","Stack","align","direction"],"sourceRoot":""}