{"version":3,"file":"static/js/759.6d3fe20c.chunk.js","mappings":"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","sources":["components/landing/terminal/commands/Help.tsx","components/landing/terminal/commands/Echo.tsx","components/landing/terminal/commands/Social.tsx","components/landing/terminal/commands/Connect.tsx","components/landing/terminal/Path.tsx","components/landing/terminal/HistoryItems.tsx","components/landing/terminal/CommandInput.tsx","domain/common/api/ApiCalls.ts","components/landing/terminal/Filesystem.tsx","views/landing/Terminal.tsx"],"sourcesContent":["import { Flex, HStack, List, ListItem } from \"@chakra-ui/react\";\n\nconst items = [\n  {\n    command: \"help\",\n    pipe: \"|\",\n    description: \"displays the list of available commands\",\n  },\n  {\n    command: \"clear\",\n    pipe: \"|\",\n    description: \"clears the console\",\n  },\n  {\n    command: \"whoami\",\n    pipe: \"|\",\n    description: \"displays the current user\",\n  },\n  {\n    command: \"echo\",\n    pipe: \"|\",\n    description: \"prints a message to the console\",\n  },\n  {\n    command: \"social\",\n    pipe: \"|\",\n    description: \"displays the list of the developer social media\",\n  },\n  {\n    command: \"connect\",\n    pipe: \"|\",\n    description: \"redirects towards my profile\",\n  },\n  {\n    command: \"cd\",\n    pipe: \"|\",\n    description: \"changes current directory\",\n  },\n  {\n    command: \"pwd\",\n    pipe: \"|\",\n    description: \"prints working directory and its path\",\n  },\n  {\n    command: \"ls\",\n    pipe: \"|\",\n    description: \"prints current directory content\",\n  },\n  {\n    command: \"mkdir\",\n    pipe: \"|\",\n    description: \"creates a new directory in current directory\",\n  },\n  {\n    command: \"touch\",\n    pipe: \"|\",\n    description: \"creates a new file in current directory\",\n  },\n  {\n    command: \"cat\",\n    pipe: \"|\",\n    description: \"prints out contents of specified file\",\n  },\n];\n\nconst Help = () => {\n  return (\n    <List spacing={2}>\n      {items.map((item, index) => (\n        <ListItem flex={\"1\"} key={index}>\n          <HStack>\n            <Flex as=\"span\" w={\"20%\"}>\n              {item.command}\n            </Flex>\n            <Flex as=\"span\" w={\"5%\"}>\n              {item.pipe}\n            </Flex>\n            <Flex as=\"span\">{item.description}</Flex>\n          </HStack>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default Help;\n","import { Flex } from \"@chakra-ui/react\";\n\ninterface Props {\n  message?: string;\n  color?: string;\n}\n\nconst Echo = ({ message = \"\", color = \"green.400\" }: Props) => {\n  if (message.startsWith(\"Error:\")) color = \"red.400\";\n  return (\n    <Flex flex={\"1\"} as=\"span\" color={`${color}`}>\n      {message}\n    </Flex>\n  );\n};\n\nexport default Echo;\n","import { Code, Flex, HStack, Link, List, ListItem, VStack } from \"@chakra-ui/react\";\n\nexport const socialMedia = [\n  {\n    site: \"LinkedIn\",\n    url: \"https://www.linkedin.com/in/ajdin-halac/\",\n  },\n  {\n    site: \"GitHub\",\n    url: \"https://github.com/AjdinHalac\",\n  },\n  {\n    site: \"Instagram\",\n    url: \"https://www.instagram.com/ajdin.halac/\",\n  },\n];\n\nconst Social = () => {\n  return (\n    <>\n      <List my={1} spacing={2}>\n        {socialMedia.map((item, index) => (\n          <ListItem flex={1} key={index}>\n            <HStack>\n              <Flex as=\"span\" w={\"30%\"}>{item.site}:</Flex>\n              <Flex as=\"span\" w={\"60%\"}>\n                <Link color={\"green.400\"} href={item.url} isExternal> {item.url}</Link>\n              </Flex>\n            </HStack>\n          </ListItem>\n        ))}\n      </List>\n\n      <VStack my={2} align={\"left\"}>\n        <Flex as=\"span\">\n          A shortcut to open any of the social media listed above is the{\" \"}\n          <Code borderRadius={\"5px\"} fontWeight={\"bold\"} colorScheme=\"teal\" mx={1}>\n            connect\n          </Code>\n          command.\n        </Flex>\n        <Flex>\n          For example:\n          <Code borderRadius={\"5px\"} fontWeight={\"bold\"} colorScheme=\"teal\" mx={1}>\n            connect github\n          </Code>\n          . Try it out!\n        </Flex>\n      </VStack>\n    </>\n  );\n};\n\nexport default Social;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { socialMedia } from \"./Social\";\nimport { Code } from \"@chakra-ui/react\";\n\ninterface Props {\n  social: string;\n}\n\nconst ErrorContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  line-height: 1.8em;\n  .error {\n    color: #ff8b8b;\n    font-weight: bold;\n    line-height: 2em;\n  }\n`;\n\nconst LoadingContainer = styled.div`\n  width: 100%;\n  display: flex;\n`;\n\nconst rotate = keyframes`\n  from{\n    transform: rotate(0deg)\n  }\n  to{\n    transform:rotate(360deg)\n  }\n`;\n\nconst Spinner = styled.span`\n  margin-left: 1em;\n  animation: ${rotate} 2s linear infinite;\n`;\n\nconst Connect = ({ social }: Props) => {\n  const [feedBack, setFeedBack] = useState({\n    loading: false,\n    error: false,\n  });\n\n  const findUrl = useCallback(() => {\n    const redirectUrl = socialMedia.find(\n      (item) => item.site.toLowerCase() === social?.toLowerCase()\n    )?.url;\n\n    return redirectUrl;\n  }, [social]);\n\n  const redirect = useCallback(() => {\n    const redirectUrl = findUrl();\n\n    if (redirectUrl) {\n      setFeedBack({ loading: true, error: false });\n\n      const id = setTimeout(() => window.open(redirectUrl), 1500);\n\n      return () => clearTimeout(id);\n    } else {\n      setFeedBack({ loading: false, error: true });\n    }\n  }, [findUrl]);\n\n  useEffect(() => {\n    redirect();\n  }, [redirect]);\n\n  return (\n    <>\n      {feedBack.error && (\n        <ErrorContainer>\n          <span className=\"error\">\n            Error while connecting to the given social media!\n          </span>\n          <span>\n            Remember to pass a valid social media as parameter to the{\" \"}\n            <Code borderRadius={\"5px\"} fontWeight={\"bold\"} colorScheme=\"teal\">\n              connect\n            </Code>{\" \"}\n            command, like this:\n          </span>\n          <span>\n            E.g:{\" \"}\n            <Code borderRadius={\"5px\"} fontWeight={\"bold\"} colorScheme=\"teal\">\n              connect instagram\n            </Code>\n          </span>\n          <span>\n            To see the list of available social media, type{\" \"}\n            <Code borderRadius={\"5px\"} fontWeight={\"bold\"} colorScheme=\"teal\">\n              social\n            </Code>\n            ,\n          </span>\n          <span>\n            To see the list of all available commands, type{\" \"}\n            <Code borderRadius={\"5px\"} fontWeight={\"bold\"} colorScheme=\"teal\">\n              help\n            </Code>\n          </span>\n        </ErrorContainer>\n      )}\n      {feedBack.loading && (\n        <LoadingContainer>\n          <span>Connecting to {social}</span>\n          <Spinner>+</Spinner>\n        </LoadingContainer>\n      )}\n    </>\n  );\n};\n\nexport default React.memo(Connect);\n","import { Box, Flex } from \"@chakra-ui/react\";\n\ninterface Props {\n  user: string;\n  path: string;\n}\n\nconst Path = ({ user, path }: Props) => {\n\n  return (\n    <Flex>\n      <Box color={\"teal\"} mr={\"0.3em\"} as=\"span\">\n        {user}\n      </Box>\n      <Box mr={\"0.3em\"} as=\"span\">\n        in\n      </Box>\n      <Box color={\"yellow\"} mr={\"0.3em\"} as=\"span\">\n        {path}\n      </Box>\n    </Flex>\n  );\n};\n\nexport default Path;\n","import Path from \"./Path\";\nimport { HiOutlineArrowNarrowRight } from \"react-icons/hi\";\nimport { Box, Flex } from \"@chakra-ui/react\";\n\ninterface Props {\n  user: string;\n  path: string;\n  inputValue: string;\n}\n\nconst HistoryItems = ({ user, path, inputValue }: Props) => {\n  return (\n    <>\n      <Path user={user} path={path} />\n      <Flex>\n        <HiOutlineArrowNarrowRight size={23} />\n        <Box as=\"span\">{inputValue}</Box>\n      </Flex>\n    </>\n  );\n};\n\nexport default HistoryItems;\n","import {\n  Box,\n  Flex,\n  Input,\n  InputGroup,\n  InputLeftElement,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { HiArrowNarrowRight } from \"react-icons/hi\";\n\ninterface Props {\n  inputValue: string;\n  changeHandler: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  submitHandler: (e: React.FormEvent<HTMLFormElement>) => void;\n}\n\nconst CommandInput = React.forwardRef<HTMLInputElement, Props>(\n  ({ inputValue, changeHandler, submitHandler }, ref) => {\n    return (\n      <Flex>\n        <form onSubmit={(e) => submitHandler(e)} data-testid=\"terminalForm\">\n          <InputGroup>\n            <InputLeftElement pointerEvents=\"none\">\n              <HiArrowNarrowRight size={23} />\n            </InputLeftElement>\n            <Input\n              data-testid=\"terminalInput\"\n              spellCheck=\"false\"\n              ref={ref}\n              type=\"text\"\n              autoFocus={true}\n              value={inputValue}\n              onChange={(e) => changeHandler(e)}\n              borderColor={\"transparent\"}\n              focusBorderColor=\"transparent\"\n            />\n          </InputGroup>\n        </form>\n      </Flex>\n    );\n  }\n);\n\nexport default React.memo(CommandInput);\n","import { ajaxService } from '../../../services/AjaxService';\nimport { IRequest, IResponse, IUser } from '../interfaces';\n\nexport default class ApiCalls {\n    public static getMe() {\n        return ajaxService.get<IResponse<IUser>>(`/me/`);\n    }\n\n    public static updateMe(request: IRequest<Partial<IUser>>) {\n        return ajaxService.put<IResponse<IUser>>(`/me/`, request.payload);\n    }\n}\n","interface UnixFile {\n  name: string;\n  content: string;\n}\n\ninterface Directory {\n  name: string;\n  files: UnixFile[];\n  subdirectories: Directory[];\n}\n\nexport class UnixFileSystem {\n  private root: Directory;\n  private currentDirectory: Directory;\n\n  constructor() {\n    this.root = { name: \"/\", files: [], subdirectories: [] };\n    this.currentDirectory = this.root;\n  }\n\n  public get getCurrentDirectory(): string {\n    return this.currentDirectory.name;\n  }\n\n  private findDirectory(path: string): Directory | null {\n    const directories = path.split(\"/\").filter((part) => part !== \"\");\n\n    let currentDir = this.root;\n    for (const dir of directories) {\n      const foundDir = currentDir.subdirectories.find((subdir) => subdir.name === dir);\n      if (foundDir) {\n        currentDir = foundDir;\n      } else {\n        return null; // Directory not found\n      }\n    }\n\n    return currentDir;\n  }\n\n  private findUnixFile(path: string): UnixFile | null {\n    const directoriesAndFile = path.split(\"/\").filter((part) => part !== \"\");\n    const fileName = directoriesAndFile.pop();\n    if (!fileName) {\n      return null;\n    }\n\n    const dir = this.findDirectory(directoriesAndFile.join(\"/\"));\n    if (!dir) {\n      return null;\n    }\n\n    return dir.files.find((file) => file.name === fileName) || null;\n  }\n\n  public cd(path: string): string {\n    if (path === \"..\") {\n      if (this.currentDirectory === this.root) {\n        return \"Error: Already at the root directory\";\n      }\n      this.currentDirectory = this.findDirectory(\"..\") || this.root;\n    } else {\n      const targetDir = this.findDirectory(path);\n      if (targetDir) {\n        this.currentDirectory = targetDir;\n      } else {\n        return `Error: Directory \"${path}\" not found`;\n      }\n    }\n\n    return \"\";\n  }\n\n  public pwd(): string {\n    const pathParts: string[] = [];\n    let currentDir = this.currentDirectory;\n\n    while (currentDir !== this.root) {\n      pathParts.unshift(currentDir.name);\n      currentDir = this.findDirectory(\"..\") || this.root;\n    }\n\n    return \"/\" + pathParts.join(\"/\");\n  }\n\n  public ls(): string[] {\n    const files = this.currentDirectory.files.map((file) => file.name);\n    const directories = this.currentDirectory.subdirectories.map(\n      (dir) => dir.name\n    );\n    return [...files, ...directories];\n  }\n\n  public mkdir(name: string): string {\n    if (this.currentDirectory.subdirectories.some((dir) => dir.name === name)) {\n      return `Error: Directory \"${name}\" already exists`;\n    }\n\n    this.currentDirectory.subdirectories.push({\n      name,\n      files: [],\n      subdirectories: [],\n    });\n    return \"\";\n  }\n\n  public touch(name: string, content: string = \"\"): string {\n    if (this.currentDirectory.files.some((file) => file.name === name)) {\n      return `Error: File \"${name}\" already exists`;\n    }\n\n    this.currentDirectory.files.push({ name, content: content });\n    return \"\";\n  }\n\n  public cat(path: string): string {\n    const file = this.findUnixFile(path);\n    if (file) {\n      return file.content;\n    } else {\n      return `Error: File \"${path}\" not found`;\n    }\n  }\n\n  public rm(path: string): string {\n    const file = this.findUnixFile(path);\n    if (file) {\n      this.currentDirectory.files = this.currentDirectory.files.filter(\n        (f) => f.name !== file.name\n      );\n      return \"\";\n    }\n\n    const directory = this.findDirectory(path);\n    if (directory) {\n      this.currentDirectory.subdirectories =\n        this.currentDirectory.subdirectories.filter(\n          (dir) => dir.name !== directory.name\n        );\n      return \"\";\n    }\n\n    return `Error: Path \"${path}\" not found`;\n  }\n\n  public mv(oldPath: string, newPath: string): string {\n    const file = this.findUnixFile(oldPath);\n    const directory = this.findDirectory(oldPath);\n\n    if (file) {\n      const newUnixFile = this.findUnixFile(newPath);\n      if (newUnixFile) {\n        return `Error: File \"${newPath}\" already exists`;\n      }\n\n      file.name = newPath.split(\"/\").pop() || file.name;\n      const targetDir = this.findDirectory(newPath);\n      if (targetDir) {\n        targetDir.files.push(file);\n        this.currentDirectory.files = this.currentDirectory.files.filter(\n          (f) => f.name !== file.name\n        );\n      } else {\n        return `Error: Directory \"${newPath}\" not found`;\n      }\n    } else if (directory) {\n      const newDir = this.findDirectory(newPath);\n      if (newDir) {\n        return `Error: Directory \"${newPath}\" already exists`;\n      }\n\n      directory.name = newPath.split(\"/\").pop() || directory.name;\n      const targetDir = this.findDirectory(newPath);\n      if (targetDir) {\n        targetDir.subdirectories.push(directory);\n        this.currentDirectory.subdirectories =\n          this.currentDirectory.subdirectories.filter(\n            (dir) => dir.name !== directory.name\n          );\n      } else {\n        return `Error: Directory \"${newPath}\" not found`;\n      }\n    } else {\n      return `Error: Path \"${oldPath}\" not found`;\n    }\n\n    return \"\";\n  }\n}\n","import { Box, Container, Divider, HStack, Stack, Text } from \"@chakra-ui/react\";\nimport { ReactElement, useCallback, useEffect, useRef, useState } from \"react\";\nimport Help from \"../../components/landing/terminal/commands/Help\";\nimport Echo from \"../../components/landing/terminal/commands/Echo\";\nimport Social from \"../../components/landing/terminal/commands/Social\";\nimport Connect from \"../../components/landing/terminal/commands/Connect\";\nimport HistoryItems from \"../../components/landing/terminal/HistoryItems\";\nimport Path from \"../../components/landing/terminal/Path\";\nimport CommandInput from \"../../components/landing/terminal/CommandInput\";\nimport { cookieService } from \"../../services/CookieService\";\nimport ApiCalls from \"../../domain/common/api/ApiCalls\";\nimport SubmitFlag from \"../../components/landing/terminal/commands/SubmitFlag\";\nimport { UnixFileSystem } from \"../../components/landing/terminal/Filesystem\";\n\nconst Terminal = (): ReactElement => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [commandsHistory, setCommandsHistory] = useState<string[]>([]);\n\n  const [user, setUser] = useState<string>(\"\");\n  const fileSystem = new UnixFileSystem();\n  fileSystem.mkdir(\"bin\");\n  fileSystem.mkdir(\"boot\");\n  fileSystem.mkdir(\"boot\");\n  fileSystem.mkdir(\"etc\");\n  fileSystem.mkdir(\"tmp\");\n  fileSystem.mkdir(\"mnt\");\n  fileSystem.mkdir(\"usr\");\n  fileSystem.mkdir(\"home\");\n  const getUser = async () => {\n    if (cookieService.isAuthenticated()) {\n      const user = await ApiCalls.getMe();\n      setUser(user.data.email.split(\"@\")[0]);\n    } else {\n      setUser(\"Anon\");\n    }\n  };\n\n  useEffect(() => {\n    getUser();\n    inputRef.current?.focus();\n  }, []);\n\n  const processInputString = (command: string): string[] => {\n    let input = command.split(\" \");\n\n    if (input.length > 3) {\n      const cmd = input.splice(0, 2);\n\n      const args = input.join(\" \");\n      return (input = [...cmd, args]);\n    }\n\n    return [...input];\n  };\n\n  const renderTerminalResponse = (command: string) => {\n    const [key, argument, argumentAnother] = processInputString(command);\n\n    switch (key.toLowerCase()) {\n      case \"help\":\n        return <Help />;\n\n      case \"clear\":\n        setCommandsHistory([]);\n        break;\n\n      case \"whoami\":\n        return <Echo message={user} />;\n\n      case \"echo\":\n        return <Echo message={argument} />;\n\n      case \"social\":\n        return <Social />;\n\n      case \"connect\":\n        return <Connect social={argument} />;\n\n      case \"cd\":\n        return <Echo message={fileSystem.cd(argument)} />;\n\n      case \"pwd\":\n        return <Echo message={fileSystem.pwd()} />;\n\n      case \"ls\":\n        return <Echo message={fileSystem.ls().join()} />;\n\n      case \"mkdir\":\n        return <Echo message={fileSystem.mkdir(argument)} />;\n\n      case \"touch\":\n        return <Echo message={fileSystem.touch(argument, argumentAnother)} />;\n\n      case \"cat\":\n        return <Echo message={fileSystem.cat(argument)} />;\n\n      case \"rm\":\n        return <Echo message={fileSystem.rm(argument)} />;\n\n      case \"mv\":\n        return <Echo message={fileSystem.mv(argument, argumentAnother)} />;\n\n      /*case \"submit-flag\":\n        return <SubmitFlag flag={argument} />;*/\n\n      default:\n        return <Echo message={`Error: Command \"${key}\" not found`} />;\n    }\n  };\n\n  const changeHandler = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setInputValue(e.target.value);\n    },\n    [inputValue]\n  );\n\n  const submitHandler = useCallback(\n    (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      processInputString(inputValue);\n      setCommandsHistory([...commandsHistory, inputValue]);\n      setInputValue(\"\");\n    },\n    [inputValue, commandsHistory]\n  );\n\n  const clickHandler = () => {\n    inputRef.current && inputRef.current.focus();\n  };\n\n  return (\n    <Container maxW={\"3xl\"} id=\"terminal\">\n      <Stack\n        as={Box}\n        textAlign={\"center\"}\n        spacing={{ base: 8, md: 14 }}\n        pb={{ base: 20, md: 36 }}\n      >\n        <Stack align=\"center\" direction=\"row\" p={4}>\n          <HStack mx={4}>\n            <Text fontWeight={800}>Terminal</Text>\n          </HStack>\n          <Divider orientation=\"horizontal\" />\n        </Stack>\n        <Stack px={4} spacing={4}>\n          <Box\n            onClick={() => clickHandler()}\n            h={\"60vh\"}\n            p={\"1rem\"}\n            boxShadow={{ base: \"none\", sm: \"md\" }}\n            boxSizing={\"border-box\"}\n            borderRadius={{ base: \"none\", sm: \"lg\" }}\n            border={\"1px solid green\"}\n            overflowY={\"auto\"}\n            overflowX={\"hidden\"}\n          >\n            {commandsHistory.map((item: any, index: number) => (\n              <Box key={index}>\n                <HistoryItems\n                  user={user}\n                  path={fileSystem.getCurrentDirectory}\n                  inputValue={item}\n                />\n                <Box color={\"gray.400\"}>{renderTerminalResponse(item)}</Box>\n              </Box>\n            ))}\n\n            <Path user={user} path={fileSystem.getCurrentDirectory} />\n            <CommandInput\n              data-testid=\"terminalInput\"\n              ref={inputRef}\n              inputValue={inputValue}\n              changeHandler={changeHandler}\n              submitHandler={submitHandler}\n            />\n          </Box>\n        </Stack>\n      </Stack>\n    </Container>\n  );\n};\n\nexport default Terminal;\n"],"names":["items","command","pipe","description","_jsx","List","spacing","children","map","item","index","ListItem","flex","_jsxs","HStack","Flex","as","w","_ref","_ref$message","message","_ref$color","color","startsWith","concat","socialMedia","site","url","_Fragment","my","Link","href","isExternal","VStack","align","Code","borderRadius","fontWeight","colorScheme","mx","ErrorContainer","styled","div","_templateObject","_taggedTemplateLiteral","LoadingContainer","_templateObject2","rotate","keyframes","_templateObject3","Spinner","span","_templateObject4","Connect","social","_useState","useState","loading","error","_useState2","_slicedToArray","feedBack","setFeedBack","findUrl","useCallback","_socialMedia$find","find","toLowerCase","redirect","redirectUrl","id","setTimeout","window","open","clearTimeout","useEffect","className","React","user","path","Box","mr","inputValue","Path","HiOutlineArrowNarrowRight","size","CommandInput","ref","changeHandler","submitHandler","onSubmit","e","InputGroup","InputLeftElement","pointerEvents","HiArrowNarrowRight","Input","spellCheck","type","autoFocus","value","onChange","borderColor","focusBorderColor","ApiCalls","_classCallCheck","_createClass","key","ajaxService","get","request","put","payload","UnixFileSystem","root","currentDirectory","this","name","files","subdirectories","_step","directories","split","filter","part","currentDir","_iterator","_createForOfIteratorHelper","_loop","dir","foundDir","subdir","v","s","n","done","_ret","err","f","directoriesAndFile","fileName","pop","findDirectory","join","file","targetDir","pathParts","unshift","_toConsumableArray","some","push","content","arguments","length","undefined","findUnixFile","directory","oldPath","newPath","inputRef","useRef","setInputValue","_useState3","_useState4","commandsHistory","setCommandsHistory","_useState5","_useState6","setUser","fileSystem","mkdir","getUser","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_user","wrap","_context","prev","next","cookieService","isAuthenticated","getMe","sent","data","email","stop","apply","_inputRef$current","current","focus","processInputString","input","cmd","splice","args","renderTerminalResponse","_processInputString","_processInputString2","argument","argumentAnother","Help","Echo","Social","cd","pwd","ls","touch","cat","rm","mv","target","preventDefault","Container","maxW","Stack","textAlign","base","md","pb","direction","p","Text","Divider","orientation","px","onClick","h","boxShadow","sm","boxSizing","border","overflowY","overflowX","HistoryItems","getCurrentDirectory"],"sourceRoot":""}