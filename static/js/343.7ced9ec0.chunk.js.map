{"version":3,"file":"static/js/343.7ced9ec0.chunk.js","mappings":"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","sources":["views/landing/Contact.tsx","../node_modules/@chakra-ui/layout/src/stack/h-stack.tsx","../node_modules/@chakra-ui/layout/src/heading.tsx","../node_modules/@chakra-ui/layout/src/center.tsx","../node_modules/@chakra-ui/layout/src/divider.tsx"],"sourcesContent":["import { Box, Center, Container, Divider, HStack, Heading, Stack, Text } from \"@chakra-ui/react\";\nimport { ReactElement } from \"react\";\nimport { FaEnvelope, FaGithub, FaLinkedin } from \"react-icons/fa\";\n\nconst Contact = (): ReactElement => {\n  return (\n    <Container maxW={\"3xl\"} id=\"contact\">\n      <Stack\n        as={Box}\n        textAlign={\"center\"}\n        spacing={{ base: 8, md: 14 }}\n        pb={{ base: 20, md: 36 }}\n      >\n        <Stack align=\"center\" direction=\"row\" p={4}>\n          <HStack mx={4}>\n            <Text fontWeight={800}>Contact</Text>\n          </HStack>\n          <Divider orientation=\"horizontal\" />\n        </Stack>\n        <Stack spacing={4} as={Container} maxW={\"3xl\"} textAlign={\"center\"}>\n          <Heading fontSize={\"3xl\"}>Let's stay in touch!</Heading>\n          <Text color={\"gray.600\"} fontSize={\"xl\"} px={4}>\n            I'd love to hear from you! Whether you have questions about my\n            products and services, want to discuss a collaboration, or simply\n            want to say hello, don't hesitate to reach out. I am eager to assist\n            and will get back to you as soon as possible. Your feedback and\n            inquiries are important to me, and I look forward to connecting with\n            you!\n          </Text>\n          <Text color={\"teal.500\"} fontWeight={600} fontSize={\"lg\"} px={4}>\n            ajdin.halac@hotmail.com\n          </Text>\n          <Center>\n            <HStack pt={4} spacing={4}>\n              <FaLinkedin\n                onClick={() => {\n                  window.open(\n                    \"https://www.linkedin.com/in/ajdin-hala%C4%87-019549121/\",\n                    \"_blank\",\n                    \"noreferrer,noopener\"\n                  );\n                }}\n                size={28}\n              />\n              <FaGithub\n                onClick={() => {\n                  window.open(\n                    \"https://github.com/AjdinHalac\",\n                    \"_blank\",\n                    \"noreferrer,noopener\"\n                  );\n                }}\n                size={28}\n              />\n              <FaEnvelope\n                onClick={() => {\n                  window.open(\n                    \"mailto:ajdin.halac@hotmail.com\",\n                    \"_blank\",\n                    \"noreferrer,noopener\"\n                  );\n                }}\n                size={28}\n              />\n            </HStack>\n          </Center>\n        </Stack>\n      </Stack>\n    </Container>\n  );\n};\n\nexport default Contact;\n","import { forwardRef } from \"@chakra-ui/system\"\n\nimport { Stack, StackProps } from \"./stack\"\n\n/**\n * A view that arranges its children in a horizontal line.\n *\n * @see Docs https://chakra-ui.com/docs/components/stack\n */\nexport const HStack = forwardRef<StackProps, \"div\">((props, ref) => (\n  <Stack align=\"center\" {...props} direction=\"row\" ref={ref} />\n))\n\nHStack.displayName = \"HStack\"\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface HeadingProps\n  extends HTMLChakraProps<\"h2\">,\n    ThemingProps<\"Heading\"> {}\n\n/**\n * `Heading` is used to render semantic HTML heading elements.\n *\n * By default, renders as `h2` with themantic size `xl`\n *\n * @see Docs https://chakra-ui.com/docs/components/heading\n */\nexport const Heading = forwardRef<HeadingProps, \"h2\">(function Heading(\n  props,\n  ref,\n) {\n  const styles = useStyleConfig(\"Heading\", props)\n  const { className, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.h2\n      ref={ref}\n      className={cx(\"chakra-heading\", props.className)}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nHeading.displayName = \"Heading\"\n","import { chakra, forwardRef, HTMLChakraProps } from \"@chakra-ui/system\"\n\nexport interface CenterProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * React component used to horizontally and vertically center its child.\n * It uses the popular `display: flex` centering technique.\n *\n * @see Docs https://chakra-ui.com/center\n */\nexport const Center = chakra(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n})\n\nCenter.displayName = \"Center\"\n\nexport interface AbsoluteCenterProps extends HTMLChakraProps<\"div\"> {\n  axis?: \"horizontal\" | \"vertical\" | \"both\"\n}\n\nconst centerStyles = {\n  horizontal: {\n    insetStart: \"50%\",\n    transform: \"translateX(-50%)\",\n  },\n  vertical: {\n    top: \"50%\",\n    transform: \"translateY(-50%)\",\n  },\n  both: {\n    insetStart: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n}\n\n/**\n * React component used to horizontally and vertically center an element\n * relative to its parent dimensions.\n *\n * It uses the `position: absolute` strategy.\n *\n * @see Docs https://chakra-ui.com/center\n * @see WebDev https://web.dev/centering-in-css/#5.-pop-and-plop\n */\nexport const AbsoluteCenter = forwardRef<AbsoluteCenterProps, \"div\">(\n  function AbsoluteCenter(props, ref) {\n    const { axis = \"both\", ...rest } = props\n    return (\n      <chakra.div\n        ref={ref}\n        __css={centerStyles[axis]}\n        {...rest}\n        position=\"absolute\"\n      />\n    )\n  },\n)\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\n/**\n * Layout component used to visually separate content in a list or group.\n * It displays a thin horizontal or vertical line, and renders a `hr` tag.\n *\n * @see Docs https://chakra-ui.com/divider\n */\nexport const Divider = forwardRef<DividerProps, \"hr\">(function Divider(\n  props,\n  ref,\n) {\n  const {\n    borderLeftWidth,\n    borderBottomWidth,\n    borderTopWidth,\n    borderRightWidth,\n    borderWidth,\n    borderStyle,\n    borderColor,\n    ...styles\n  } = useStyleConfig(\"Divider\", props)\n  const {\n    className,\n    orientation = \"horizontal\",\n    __css,\n    ...rest\n  } = omitThemingProps(props)\n\n  const dividerStyles = {\n    vertical: {\n      borderLeftWidth:\n        borderLeftWidth || borderRightWidth || borderWidth || \"1px\",\n      height: \"100%\",\n    },\n    horizontal: {\n      borderBottomWidth:\n        borderBottomWidth || borderTopWidth || borderWidth || \"1px\",\n      width: \"100%\",\n    },\n  }\n\n  return (\n    <chakra.hr\n      ref={ref}\n      aria-orientation={orientation}\n      {...rest}\n      __css={{\n        ...styles,\n        border: \"0\",\n\n        borderColor,\n        borderStyle,\n        ...dividerStyles[orientation],\n        ...__css,\n      }}\n      className={cx(\"chakra-divider\", className)}\n    />\n  )\n})\n\nexport interface DividerProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps<\"Divider\"> {\n  orientation?: \"horizontal\" | \"vertical\"\n}\n\nDivider.displayName = \"Divider\"\n"],"names":["_jsx","Container","maxW","id","children","_jsxs","Stack","as","Box","textAlign","spacing","base","md","pb","align","direction","p","HStack","mx","Text","fontWeight","Divider","orientation","Heading","fontSize","color","px","Center","pt","FaLinkedin","onClick","window","open","size","FaGithub","FaEnvelope","forwardRef","props","ref","jsx","_objectSpread","displayName","styles","useStyleConfig","_omitThemingProps","omitThemingProps","rest","className","_objectWithoutProperties","_excluded","chakra","h2","cx","__css","baseStyle","display","alignItems","justifyContent","centerStyles","horizontal","insetStart","transform","vertical","top","both","_props$axis","axis","div","position","_useStyleConfig","borderLeftWidth","borderBottomWidth","borderTopWidth","borderRightWidth","borderWidth","borderStyle","borderColor","_omitThemingProps$ori","_excluded2","dividerStyles","height","width","hr","border"],"sourceRoot":""}